{
  "id": 2,
  "name": "pr: Inform",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "name": "Start",
      "type": "n8n-nodes-base.start",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "fileName": "={{$node[\"Read Binary File\"].parameter[\"filePath\"]}}"
      },
      "name": "Write Binary File",
      "type": "n8n-nodes-base.writeBinaryFile",
      "typeVersion": 1,
      "position": [
        1360,
        400
      ]
    },
    {
      "parameters": {
        "repositoryPath": "./",
        "options": {}
      },
      "name": "Git",
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        2000,
        400
      ]
    },
    {
      "parameters": {
        "operation": "add",
        "repositoryPath": "./",
        "pathsToAdd": "test.txt"
      },
      "name": "Git1",
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        2160,
        400
      ]
    },
    {
      "parameters": {
        "operation": "commit",
        "repositoryPath": "./",
        "message": "test",
        "options": {}
      },
      "name": "Git2",
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        2320,
        400
      ]
    },
    {
      "parameters": {
        "operation": "addConfig",
        "repositoryPath": "./",
        "key": "user.email",
        "value": "test@test.com",
        "options": {}
      },
      "name": "Git Set Email",
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        1680,
        400
      ]
    },
    {
      "parameters": {
        "operation": "addConfig",
        "repositoryPath": "./",
        "key": "user.name",
        "value": "Test User",
        "options": {}
      },
      "name": "Git Set Name",
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        1840,
        400
      ]
    },
    {
      "parameters": {
        "operation": "push",
        "repositoryPath": "./",
        "options": {}
      },
      "name": "Git3",
      "type": "n8n-nodes-base.git",
      "typeVersion": 1,
      "position": [
        2480,
        400
      ]
    },
    {
      "parameters": {
        "filePath": "./PRs-opened.csv"
      },
      "name": "Read Binary File",
      "type": "n8n-nodes-base.readBinaryFile",
      "typeVersion": 1,
      "position": [
        480,
        300
      ]
    },
    {
      "parameters": {
        "options": {
          "rawData": true
        }
      },
      "name": "Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        700,
        300
      ]
    },
    {
      "parameters": {},
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 1,
      "position": [
        920,
        400
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "date",
              "value": "={{ new Date().toISOString() }}"
            }
          ],
          "number": [
            {
              "name": "number",
              "value": "={{$json[\"PR\"]}}"
            }
          ]
        },
        "options": {}
      },
      "name": "New Entry",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        700,
        520
      ]
    },
    {
      "parameters": {
        "operation": "toFile",
        "fileFormat": "csv",
        "options": {}
      },
      "name": "Spreadsheet File1",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        1120,
        400
      ]
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "requestMethod": "GET",
        "endpoint": "https://api.linear.app/graphql",
        "query": "=query Issue {\n  issue(id: \"{{$node[\"GraphQL Create Issue\"].json[\"data\"][\"data\"][\"issueCreate\"][\"issue\"][\"id\"]}}\") {\n    id\n    title\n    description\n  }\n}",
        "headerParametersUi": {
          "parameter": []
        }
      },
      "name": "GraphQL Get isssue",
      "type": "n8n-nodes-base.graphql",
      "typeVersion": 1,
      "position": [
        1680,
        80
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "32",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "endpoint": "https://api.linear.app/graphql",
        "requestFormat": "json",
        "query": "=mutation IssueCreate {\n  issueCreate(\n    input: {\n      title: \"PR: {{$json[\"title\"]}}\"\n      description: \"New PR to review: {{$json[\"html_url\"]}}\"\n      teamId: \"7a330c36-4b39-4bf1-922e-b4ceeb91850a\"\n    }\n  ) {\n    success\n    issue {\n      id\n      title\n    }\n  }\n}",
        "responseFormat": "string",
        "headerParametersUi": {
          "parameter": []
        }
      },
      "name": "GraphQL Create Issue",
      "type": "n8n-nodes-base.graphql",
      "typeVersion": 1,
      "position": [
        1520,
        80
      ],
      "credentials": {
        "httpHeaderAuth": {
          "id": "32",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "channelId": "wwwdbjmcxbbfdmtab4mst9hy3o",
        "message": "=As a new PR: is created on GitHub, A new issue got created using GitHub actions:\nIssue ID: {{$node[\"GraphQL Get isssue\"].json[\"data\"][\"issue\"][\"id\"]}}\nIssue Title: {{$node[\"GraphQL Get isssue\"].json[\"data\"][\"issue\"][\"title\"]}}",
        "attachments": [],
        "otherOptions": {}
      },
      "name": "Mattermost",
      "type": "n8n-nodes-base.mattermost",
      "typeVersion": 1,
      "position": [
        1860,
        80
      ],
      "credentials": {
        "mattermostApi": {
          "id": "1",
          "name": "Mattermost Bot Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "owner": "janober",
        "repository": "n8n-github-action",
        "issueNumber": "={{$json[\"PR_number\"]}}"
      },
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        1340,
        80
      ],
      "credentials": {
        "githubApi": {
          "id": "2",
          "name": "Github account"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "GITHUB_REF",
              "value": "={{ $env.GITHUB_REF || \"refs/pull/2/merge\" }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Environment Data3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        240,
        520
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "GITHUB_HEAD_REF",
              "value": "={{ $env.GITHUB_HEAD_REF || \"test\" }}"
            },
            {
              "name": "GITHUB_REF",
              "value": "={{ $env.GITHUB_REF || \"refs/pull/2/merge\" }}"
            },
            {
              "name": "GITHUB_REPOSITORY_OWNER",
              "value": "={{ $env.GITHUB_REPOSITORY_OWNER || \"janober\" }}"
            },
            {
              "name": "GITHUB_REPOSITORY",
              "value": "={{ $env.GITHUB_REPOSITORY || \"n8n\" }}"
            }
          ],
          "number": []
        },
        "options": {}
      },
      "name": "Environment Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1020,
        80
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "PR",
              "value": "={{$json[\"GITHUB_REF\"].split('/')[2]}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Clean Data2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        480,
        520
      ],
      "disabled": true
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Repository_name",
              "value": "={{$json[\"GITHUB_REPOSITORY\"]}}"
            },
            {
              "name": "Source_branch_name",
              "value": "={{$json[\"GITHUB_HEAD_REF\"]}}"
            },
            {
              "name": "Repository_owner",
              "value": "={{$json[\"GITHUB_REPOSITORY_OWNER\"]}}"
            }
          ],
          "number": [
            {
              "name": "PR_number",
              "value": "={{$json[\"GITHUB_REF\"].split('/')[2]}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Clean Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        1180,
        80
      ]
    }
  ],
  "connections": {
    "Git": {
      "main": [
        [
          {
            "node": "Git1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git1": {
      "main": [
        [
          {
            "node": "Git2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git2": {
      "main": [
        [
          {
            "node": "Git3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git Set Email": {
      "main": [
        [
          {
            "node": "Git Set Name",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Git Set Name": {
      "main": [
        [
          {
            "node": "Git",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Start": {
      "main": [
        [
          {
            "node": "Read Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read Binary File": {
      "main": [
        [
          {
            "node": "Spreadsheet File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet File": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "New Entry": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Spreadsheet File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet File1": {
      "main": [
        [
          {
            "node": "Write Binary File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Write Binary File": {
      "main": [
        [
          {
            "node": "Git Set Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GraphQL Create Issue": {
      "main": [
        [
          {
            "node": "GraphQL Get isssue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GraphQL Get isssue": {
      "main": [
        [
          {
            "node": "Mattermost",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Environment Data3": {
      "main": [
        [
          {
            "node": "Clean Data2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Environment Data": {
      "main": [
        [
          {
            "node": "Clean Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Data2": {
      "main": [
        [
          {
            "node": "New Entry",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clean Data": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "GraphQL Create Issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2022-01-12T14:16:02.481Z",
  "updatedAt": "2022-01-12T15:08:51.670Z",
  "settings": {},
  "staticData": null
}